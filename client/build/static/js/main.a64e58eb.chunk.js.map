{"version":3,"sources":["components/IndividualCharacter.js","components/IndividualPlanet.js","components/IndividualVehicle.js","reducer.js","components/Navbar.js","components/SplashPage.js","components/CharacterListItem.js","Utilities.js","components/PlanetListItem.js","components/VehicleListItem.js","components/TagItems.js","components/TagForm.js","components/Tag.js","containers/IndividualCharacterContainer.js","components/Characters.js","containers/CharactersContainer.js","containers/IndividualPlanetContainer.js","components/Planets.js","containers/PlanetsContainer.js","containers/IndividualVehicleContainer.js","components/Vehicle.js","containers/VehicleContainer.js","App.js","serviceWorker.js","index.js"],"names":["planetCode","characterIdList","pilotList","initialState","characters","vehicles","planets","people","individualCharacter","individualPlanet","individualVehicle","homeworld","species","tags","id","content","reducer","state","arguments","length","undefined","actions","type","character","planet","vehicle","newTags","Object","objectSpread","Navigation","react_default","a","createElement","className","react_router_dom","to","SplashPage","CharacterListItem","clickHandler","_this","props","history","push","concat","window","location","reload","name","this","onClick","bind","Component","withRouter","getStarWarsData","url","data","resolve","reject","axios","get","then","response","retrivedData","results","next","catch","error","console","log","PlanetListItem","VehicleListItem","TagItems","_ref","deleteTag","tagList","map","tag","key","onDoubleClick","AddTag","handleChange","e","setState","target","value","handleSubmit","addTag","preventDefault","onSubmit","onChange","placeholder","Tag","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filter","Math","random","toConsumableArray","components_TagItems","TagForm","ids","IndividualCharacter","characterID","match","params","_this$props","loadCharacter","loadHomeWorldName","loadSpeciesName","loadVehicles","urls","i","split","parseInt","Promise","all","vehicleList","homeworldPromiseURL","speciesPromiseURL","_ref2","_ref3","slicedToArray","err","_this$props2","components_VehicleListItem","birth_year","gender","height","components_PlanetListItem","components_Tag","connect","dispatch","loadPlanets","IndividiualChracter","Characters","loadCharacters","Utils","list","style","fontSize","components_CharacterListItem","react_router","exact","path","render","component","IndividualCharacterContainer","pageNumber","IndividualPlanet","loadPlanetInfo","loadPeople","planetID","residents","residentList","population","diameter","climate","gravity","terrain","Planets","planetList","IndividualPlanetContainer","IndividualVehicle","vehicleID","loadVehicle","pilots","model","vehicle_class","manufacturer","cost_in_credits","crew","passengers","consumables","cargo_capacity","vehicleCode","Starships","urlList","vid","idPosition","vehiclesList","IndividualVehicleContainer","Vehicle","App","Navbar","CharactersContainer","PlanetsContainer","IndvidualPlanetsContainer","VehicleContainer","Boolean","hostname","store","createStore","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a64e58eb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PlanetListItem from './PlanetListItem'\nimport VehicleListItem from './VehicleListItem'\nimport axios from 'axios';\n// import TagsContainer from '../containers/TagsContainer'\nimport Tags from './Tag'\n\nlet planetCode;\nlet ids = [];\nclass IndividualCharacter extends Component{\n\n    \n    componentDidMount(){\n        \n        let characterID= this.props.match.params.id\n        \n        let {loadCharacter , loadHomeWorldName, loadSpeciesName, loadVehicles} = this.props\n\n        axios.get(`${characterID}`)//api/characters/:id\n            .then( ({ data }) =>{\n                loadCharacter(data)\n                let urls =[]\n\n                ids = data.vehicles.map((url,i)=>{\n                    urls.push(axios.get(url))\n                    let splitUrl = url.split('/')\n                    let id = splitUrl[5]\n                    let vehicleCode = parseInt(id,10)\n                    return vehicleCode\n                })\n                Promise.all(urls).then( data =>{\n                    let vehicleList = data.map((vehicles,i)=>{\n                        return vehicles.data.name\n                    })\n                    loadVehicles(vehicleList)\n                })\n                \n                let homeworldPromiseURL = axios.get(data.homeworld)\n                let speciesPromiseURL = axios.get(data.species)\n                return Promise.all([homeworldPromiseURL, speciesPromiseURL])\n        }).then(( [homeworld , species] ) =>{\n            let url = homeworld.data.url\n            let arr = url.split('/')\n            let id = arr[5]\n            planetCode = parseInt(id,10)\n            loadHomeWorldName(homeworld.data.name)\n            loadSpeciesName(species.data.name)\n        }).catch(err=>{\n            console.log('Something went wrong<---->Promise rejected',err)\n        })\n    }\n\n\n\n    render(){\n        let{ individualCharacter, homeworld, species , vehicles} = this.props\n\n        let vehicleList = vehicles.map((name,i)=>{\n            return(\n                <div key ={i}>\n                    <ul>\n                        <li><b><VehicleListItem  name = {name} id = {ids[i]}/></b></li>\n                    </ul>\n                    \n                </div>\n            )\n        })\n\n        return(\n            <div className = 'contentParent'>\n                <div className = 'contentChild'> \n                    <h1>{individualCharacter.name}</h1>\n                    <h3>Specifications: </h3>\n                    <ul>\n                        <li><b>Birth Year: {individualCharacter.birth_year}</b></li>\n                        <li><b>Gender :    {individualCharacter.gender}</b></li>\n                        <li><b>Height :    {individualCharacter.height} centimeters</b></li>\n                        <li><b>Species:    {species}</b></li>\n                    </ul>\n                    <div>\n                    <h4>Home World:</h4>\n                    <ul>\n                        <li><b><PlanetListItem  name = {homeworld} id = {planetCode}/></b></li>\n                    </ul>\n                \n                    </div>\n                    <h4>Vehicles:</h4>\n                    {vehicleList}\n\n                    <Tags name = {individualCharacter.name}/>\n                    \n                </div>\n            </div>\n\n           \n        )\n    }\n}\n\nexport default IndividualCharacter","import React, { Component } from 'react'\nimport axios from 'axios'\nimport CharacterListItem from './CharacterListItem'\nlet characterIdList;\nclass IndividualPlanet extends Component {\n\n    componentDidMount(){\n        //do something here later.\n        let { loadPlanetInfo,loadPeople} = this.props\n        let planetID = this.props.match.params.id\n        axios.get(`${planetID}`) //api/planets/:id\n            .then( ({ data }) =>{\n                loadPlanetInfo(data)\n                let urls = data.residents.map( (url)=>{\n                    return axios.get(url)\n                })\n                characterIdList = data.residents.map((url,i)=>{\n                    let idList = url.split('/')\n                    let id = idList[5]\n                    let characterId = parseInt(id,10)\n\n                    return characterId\n                })\n                Promise.all(urls)\n                    .then((data)=>{\n                        let residentList = data.map( data =>{\n                            return data.data.name\n                        })\n                        loadPeople(residentList)\n                    })\n            }).catch(err =>{\n                throw err\n            })\n    }\n    render(){\n        let { individualPlanet, people } = this.props\n        let residents = people.map( (name,i) =>{\n            return (\n                <div key = {i}>\n                    <ul>\n                        <li><b><CharacterListItem id = {characterIdList[i]} name = {name}/></b></li>\n                    </ul>\n                   \n                </div>    \n            ) \n        })\n        return(\n            <div className = 'contentParent'>\n                <div className = 'contentChild'>\n                    <h1>{individualPlanet.name}</h1>\n                    <div>\n                        <h3>Specifications:</h3>\n                        <ul>\n                            <li><b>Population: {individualPlanet.population}</b></li>\n                            <li><b>Diameter:   {individualPlanet.diameter}</b></li>\n                            <li><b>Climate:    {individualPlanet.climate}</b></li>\n                            <li><b>Gravity:    {individualPlanet.gravity}</b></li>\n                            <li><b>Terrain:    {individualPlanet.terrain}</b></li>\n                        </ul>\n                    <h3>Known Residents:</h3>\n                    {residents}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default IndividualPlanet","import React ,{ Component } from 'react'\nimport CharacterListItem from './CharacterListItem'\nimport axios from 'axios'\nlet pilotList;\n\nclass IndividualVehicle extends Component{\n\n    componentDidMount(){\n        let vehicleID = this.props.match.params.id\n        let { loadVehicle, loadPeople } = this.props\n        axios.get(`${vehicleID}`)//api/starships/:id\n            .then( ({ data })=>{\n                console.log(data.pilots,\"Your pilots\")\n                loadVehicle(data)\n\n                let urls = data.pilots.map( (url)=>{\n                    return axios.get(url)\n                })\n                pilotList = data.pilots.map((url,i)=>{\n                    let idList = url.split('/')\n                    let id = idList[5]\n                    let characterId = parseInt(id,10)\n\n                    return characterId\n                })\n\n                console.log(pilotList)\n                Promise.all(urls)\n                    .then((data)=>{\n                        let pilots = data.map( data =>{\n                            return data.data.name\n                        })\n                        loadPeople(pilots)\n                    })\n            }).catch(err =>{\n                if(err){\n                    throw err\n                }\n            })\n\n\n    }\n    render(){\n        let { individualVehicle, people } = this.props\n\n        let pilots = people.map( (name,i) =>{\n            return (\n                <div key = {i}>\n                    <ul>\n                        <li><b><CharacterListItem id = {pilotList[i]} name = {name}/></b></li>\n                    </ul>\n                    \n                </div>    \n            ) \n        })\n\n        console.log(individualVehicle)\n        return(\n            <div className = 'contentParent'>\n                <div className = 'contentChild'>\n                    <h1>{individualVehicle.name}</h1>\n                    <h3>Specifications: </h3>\n                    <ul>\n                        <li><b>Model: {individualVehicle.model}</b></li>\n                        <li><b>Class : {individualVehicle.vehicle_class} </b></li>\n                        <li><b>Manufacturer :    {individualVehicle.manufacturer}</b></li>\n                        <li><b>Length : {individualVehicle.length} meters </b></li>\n                        <li><b>Credits/Price:    {individualVehicle.cost_in_credits} centimeters</b></li>\n                        <li><b>Crew Size : {individualVehicle.crew}</b></li>\n                        <li><b>Passengers : {individualVehicle.passengers}</b></li>\n                        <li><b>Consumables / Food Supply : {individualVehicle.consumables} </b></li>\n                        <li><b>Cargo Capacity: {individualVehicle.cargo_capacity} </b></li>\n                    \n                    </ul>\n\n                    <h3>Pilots : </h3>\n                    {pilots}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default IndividualVehicle","let initialState = {\n    characters : [],\n    vehicles : [],\n    planets: [],\n    people :[],\n    individualCharacter : {},\n    individualPlanet : {},\n    individualVehicle : {},\n    homeworld: '',\n    species: '',\n\n    tags : [\n        {id : 1, content : 'Tag Item'},\n        {id : 2, content : 'Jedi'}\n    ]\n}\n\n\nlet reducer = (state = initialState, actions) => {\n    let { type, characters, character, homeworld, planets, species, planet , people, vehicles, vehicle, tags, newTags} = actions\n\n    switch (type) {\n        case \"GET_CHARACTERS\":\n            return{\n                ...state,\n                characters : characters\n                \n                \n            }\n        \n        case \"LOAD_CHARACTER\" : \n            return{\n                ...state,\n                individualCharacter : character\n            }\n\n        case \"LOAD_HOMEWORLD\":\n            return {\n                //something\n            }\n\n        case \"LOAD_HOMEWORLD_NAME\" :\n            return {\n                ...state,\n                homeworld: homeworld\n            }\n\n        case \"LOAD_SPECIES_NAME\" :\n        return {\n            ...state,\n            species : species\n        }\n\n        case \"GET_PLANETS\" :\n            return {\n                ...state,\n                planets : planets\n            }\n        \n        case \"LOAD_PLANET\":\n            return{\n                ...state,\n                individualPlanet : planet\n            }\n        case \"LOAD_PEOPLE\" :\n            return{\n                ...state,\n                people : people\n            }\n\n        case \"LOAD_VEHICLES\" :\n            return{\n                ...state,\n                vehicles : vehicles\n            }\n\n        case \"GET_VEHICLE\" : \n        return{\n            ...state,\n            individualVehicle : vehicle\n        }\n\n        case \"ADD_TAG\":\n        return{\n            ...state,\n            tags : tags\n        }\n\n        case \"REMOVE_TAG\":\n        return{\n            ...state,\n            tags : newTags\n        }\n        default:\n        return {\n            ...state\n          };\n    }\n}\n\nexport default reducer;","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Navigation =()=>{\n    return(\n    <div >\n        <div>\n            <nav className=\"navvy navbar\">\n                <div className=\"container\">\n                    <NavLink to = \"/home\">Home</NavLink>\n                    <NavLink to = \"/characters\">Characters</NavLink>\n                    <NavLink to = \"/planets\">Planets</NavLink>\n                    <NavLink to = \"/vehicles\">Vehicles</NavLink>\n\n                </div>\n            </nav>\n        </div>\n    </div>\n    )\n}\n\nexport default Navigation","import React from 'react'\n\n\nconst SplashPage = ()=>{\n    return(\n        <div className = 'splash'>\n            <div className = 'star'>\n                <h1 className = \"header\">STAR</h1>\n            </div>\n            <div className = \"wars\">\n                <h1 className = \"header\">WARS</h1>\n            </div>\n\n            <div className = \"wiki\">\n                <h1 className = \"header\">WIKI-Verse</h1>\n            </div>\n            \n        </div>\n    )\n}\n\n\nexport default SplashPage","import React , { Component } from  'react'\nimport { withRouter } from 'react-router-dom'\n\nclass CharacterListItem extends Component{\n    \n    clickHandler =()=>{\n       let { id } = this.props\n       this.props.history.push(`/api/characters/${id}`)///----\n       window.location.reload()\n    }\n\n    render(){\n        let {name} = this.props\n        return(\n            <div>\n                <div onClick = {this.clickHandler.bind(this)}>\n                    <div>\n                    <p>{name}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }  \n}\n\nexport default withRouter(CharacterListItem)\n","import axios from 'axios'\n\nexport const getStarWarsData = (url, data, resolve, reject) => {\n  axios.get(url)\n    .then(response => {\n      const retrivedData = data.concat(response.data.results)\n      if (response.data.next !== null) {\n        getStarWarsData(response.data.next, retrivedData, resolve, reject)\n      } else {\n        resolve(retrivedData)\n      }\n    })\n    .catch(error => {\n      console.log(error)\n      reject('Something wrong. Please refresh the page and try again.')\n    })\n}","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass PlanetListItem extends Component {\n    \n  clickHandler =()=>{\n    let { id } = this.props\n      this.props.history.push(`/api/planets/${id}`)\n      window.location.reload() \n  } \n\n    render(){\n      let { name } = this.props\n        return(\n          <div>\n            <div onClick = {this.clickHandler.bind(this)}>\n              <div>\n              <p>{name}</p>\n              </div>   \n            </div>\n          </div>\n        )\n    }\n}  \n\nexport default withRouter(PlanetListItem)","import React , { Component } from  'react'\nimport { withRouter } from 'react-router-dom'\n\nclass VehicleListItem extends Component{\n\n    clickHandler =()=>{\n        let { id } = this.props\n        this.props.history.push(`/api/vehicles/${id}`)///----\n    }\n    render(){\n        let { name } =this.props\n        return(\n            <div onClick = {this.clickHandler.bind(this)}>\n                <p>{name}</p>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(VehicleListItem)","import React from 'react'\n\nconst TagItems = ({ tags, deleteTag }) =>{\n\n    const tagList = tags.length ? (\n        tags.map((tag) =>{\n            return(\n                <div key = {tag.id}>\n                    <span onDoubleClick = {()=>{deleteTag(tag.id)}}>{tag.content}</span>\n                </div>\n            )\n        })\n    ) : (\n    <p>No tags yet</p>\n    )\n    return(\n        <div className = \"tags\">\n            {tagList}\n        </div>\n    )\n}\n\nexport default TagItems","import React, { Component } from 'react'\n\nclass AddTag extends Component {\n    state ={\n        content : ''\n    }\n\n    handleChange =(e)=>{\n        this.setState({\n            content : e.target.value\n        })\n    }\n\n    handleSubmit =(e)=>{\n        let { addTag } = this.props\n        e.preventDefault()\n        addTag(this.state)\n        this.setState({\n            content : ''\n        })\n    }\n\n    \n    render(){\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <input type = 'text'onChange ={this.handleChange} value = {this.state.content} placeholder = \"Add Tag\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddTag","import React, { Component } from 'react'\nimport TagItems from './TagItems'\nimport TagForm from './TagForm'\n\nclass Tag extends Component {\n    constructor() {\n      super();\n      \n      this.state = {\n        tags: []\n      };\n    }\n\n    deleteTag=(id)=>{\n      const tags = this.state.tags.filter( tags =>{\n        return tags.id !== id\n      })\n      this.setState({tags})\n      console.log(id)\n    }\n\n    addTag =(tag)=>{\n      tag.id = Math.random()\n      let tags = [...this.state.tags,tag]\n      this.setState({tags})\n    }\n\n    render(){\n      let {name} = this.props\n      return(\n        <div>\n          <h3>Tag's {name}</h3>\n          <TagItems tags = {this.state.tags} deleteTag = {this.deleteTag}/>\n          <TagForm addTag = {this.addTag}/>\n        </div>\n      )\n    }\n    \n}\n  export default Tag","import IndividiualChracter from '../components/IndividualCharacter'\nimport { connect } from  'react-redux'\n\n\nconst mapStateToProps =(state)=>{\n    return {\n        individualCharacter : state.individualCharacter,\n        homeworld : state.homeworld,\n        species : state.species,\n        planets : state.planets,\n        vehicles : state.vehicles\n       \n    }\n}\n\nconst mapDispatchtoProps =(dispatch)=>{\n    return{\n        loadCharacter : (character) =>dispatch({type: \"LOAD_CHARACTER\", character: character}),\n        loadHomeWorldName : (homeworld) => dispatch ({type : \"LOAD_HOMEWORLD_NAME\", homeworld : homeworld}),\n        loadSpeciesName : (species)=> dispatch({type: \"LOAD_SPECIES_NAME\", species : species}),\n        loadPlanets : (planets)=> dispatch({type: \"GET_PLANETS\", planets: planets}),\n        loadVehicles : (vehicles) => dispatch({type : \"LOAD_VEHICLES\", vehicles: vehicles})\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchtoProps )(IndividiualChracter)","import React, { Component } from 'react'\nimport { BrowserRouter, Switch , Route } from 'react-router-dom'\nimport CharacterListItem from './CharacterListItem'\nimport * as Utils from '../Utilities'\nimport IndividualCharacterContainer from  '../containers/IndividualCharacterContainer';\n\n\nclass  Characters extends Component {\n\n    componentDidMount() {\n        let { loadCharacters }  = this.props\n        new Promise((resolve, reject) => {\n          Utils.getStarWarsData('api/characters', [], resolve, reject)\n        }).then(response => {\n            loadCharacters(response)\n\n          })\n      }\n\n    render(){\n        let { characters } = this.props\n        let list = characters.length ? (characters.map((character, i) =>{\n            let id = i+1\n\n            // few id conditions.\n            if (id > 16){\n                id = id + 1\n            }\n\n            if(id >=35){\n                id = id +1;\n            }\n\n            if(id === 89){\n                id = 35\n            }\n\n\n            return (\n                <div key ={i} style = {{fontSize : '1.3em' }}>\n                    \n                    <b><CharacterListItem id = {id} name = {character.name} birth_year = {character.birth_year} gender = {character.gender}/></b>\n                </div>\n            )      \n        })):(<h4>Loading cool people and villains....</h4>)\n\n        return(\n            <div>\n                <div>\n\n                    <BrowserRouter>\n                        <Switch>\n                            <Route exact path = \"/characters\" render = {()=>list}/>\n                            <Route path = '/api/characters/:id/' component = {IndividualCharacterContainer}/>\n                        </Switch>\n                    </BrowserRouter>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Characters","import { connect } from 'react-redux'\nimport Characters from '../components/Characters'\n\nconst mapStateToProps =(state)=>{\n    return{\n        characters : state.characters,\n        pageNumber : state.pageNumber\n    }\n}\n\nconst mapDispatchToProps =(dispatch)=>{\n    return {\n        loadCharacters : (characters) => dispatch({type: \"GET_CHARACTERS\" , characters : characters})\n    }\n}\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Characters)","import IndividualPlanet from '../components/IndividualPlanet'\nimport { connect } from 'react-redux'\n\n\nconst mapStateToProps = (state) =>{\n    return {\n        individualPlanet : state.individualPlanet,\n        people : state.people\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        loadPlanetInfo : (planet)=> dispatch({type: \"LOAD_PLANET\", planet : planet}),\n        loadPeople : (people)=> dispatch({type: \"LOAD_PEOPLE\", people: people})\n    }\n}\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(IndividualPlanet)","import React, { Component } from 'react'\nimport { BrowserRouter, Switch , Route } from 'react-router-dom'\nimport * as Utils from '../Utilities'\nimport PlanetListItem from './PlanetListItem'\nimport IndividualPlanetContainer from '../containers/IndividualPlanetContainer'\n\n\n\nclass Planets extends Component {\n\n    componentDidMount(){\n        let { loadPlanets } = this.props\n        new Promise((resolve,reject)=>{\n            Utils.getStarWarsData('api/planets', [], resolve, reject)\n        }).then(data =>{\n            loadPlanets(data)\n        })\n    }\n\n    render(){\n        let { planets } =this.props\n        let planetList = planets.length ? (planets.map( (planet, i)=>{\n            return(\n                <div key = {i} style = {{fontSize : '1.3em' }}>\n                   <b> <PlanetListItem id = {i + 2} name = {planet.name}/> </b>\n                </div>\n            )\n        })):(<h4>The Universe is a big place. One moment please...</h4>)\n        return(\n            <div>\n                <div>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route exact path = '/planets' render ={()=>planetList}/>\n                            <Route path = '/api/planets/:id/' component = {IndividualPlanetContainer}/>\n                        </Switch>\n                    </BrowserRouter>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Planets","import Planets from '../components/Planets'\nimport { connect } from 'react-redux'\n\n\nconst mapStateToProps =(state)=>{\n    return {\n        planets : state.planets\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        loadPlanets : (planets)=> dispatch({type: \"GET_PLANETS\", planets: planets}),\n        \n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Planets)","import IndividualVehicle from '../components/IndividualVehicle'\nimport { connect } from  'react-redux'\n\nconst mapStateToProps = (state) =>{\n    return{\n        individualVehicle : state.individualVehicle,\n        people :state.people\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        loadVehicle : (vehicle)=>dispatch({type: \"GET_VEHICLE\", vehicle: vehicle}),\n        loadPeople : (people) =>dispatch({type: \"LOAD_PEOPLE\", people: people})\n    }\n        \n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(IndividualVehicle)","import React, { Component } from 'react'\nimport { BrowserRouter, Switch , Route } from 'react-router-dom'\nimport * as Utils from '../Utilities'\nimport VehicleListItem from './VehicleListItem'\nimport IndividualVehicleContainer from '../containers/IndividualVehicleContainer'\nlet vehicleCode = []\nclass Starships extends Component{\n\n    componentDidMount(){\n        let { loadVehicles } = this.props\n        new Promise((resolve, reject) => {\n            Utils.getStarWarsData('api/vehicles', [], resolve, reject)\n          }).then(response => {\n                console.log(response)\n                \n                //Creating vehicle ID\n                let urlList = response.map((url, i)=>{\n                    url = response[i].url\n                    return url\n                })\n                vehicleCode = urlList.map((vid,i)=>{\n                    let newId = urlList[i].split('/')\n                    let idPosition = newId[5]\n                    vid = parseInt(idPosition,10)\n                    return vid\n                })\n\n                //loading vehicle information\n                loadVehicles(response)\n            })\n    }\n    render(){\n        let { vehicles } = this.props\n        console.log(vehicles , ' look here ')\n\n        let vehiclesList = vehicles.length ? (vehicles.map( (vehicle,i)=>{\n            return(\n                <div key ={i} style = {{fontSize : '1.3em' }}>  \n                    <b><VehicleListItem id = {vehicleCode[i]} name = {vehicle.name}/></b>\n                </div>\n            )\n        })):(<h4>Can't really find these in a dealership. Loading Vehicles...</h4>)\n        return(\n            <div>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path = '/vehicles' render = {()=>vehiclesList}/>\n                        <Route path = '/api/vehicles/:id/' component = {IndividualVehicleContainer}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\n\nexport default Starships","import { connect } from 'react-redux'\nimport Vehicle from '../components/Vehicle'\n\nconst mapStateToProps =(state)=>{\n    return {\n        vehicles : state.vehicles\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        loadVehicles : (vehicles) => dispatch({type : \"LOAD_VEHICLES\", vehicles: vehicles})\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Vehicle)","import React, { Component } from 'react';\nimport { Switch , Route } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport SplashPage from './components/SplashPage'\nimport CharactersContainer from './containers/CharactersContainer'\nimport PlanetsContainer from './containers/PlanetsContainer'\nimport IndvidualPlanetsContainer from './containers/IndividualPlanetContainer'\nimport IndividualCharacterContainer from './containers/IndividualCharacterContainer'\nimport VehicleContainer from './containers/VehicleContainer'\nimport IndividualVehicleContainer from './containers/IndividualVehicleContainer'\nimport './styles/css/styles.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className = \"content\">\n        <Navbar/>\n        <Switch>\n            <Route path = \"/home\" component ={SplashPage}/>\n            <Route path = \"/characters\" component = {CharactersContainer} />\n            <Route path = \"/api/characters/:id\" component = {IndividualCharacterContainer} />\n            <Route path = \"/planets\" component = {PlanetsContainer} />\n            <Route path = \"/api/planets/:id\" component = {IndvidualPlanetsContainer} />\n            <Route path = \"/vehicles\" component = {VehicleContainer} />\n            <Route path = \"/api/vehicles/:id\" component = {IndividualVehicleContainer} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducer'\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n    <Provider store = {store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>, \n    document.getElementById('root')\n    );\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}